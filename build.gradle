group 'org.biacode.jleadboxer'
version '0.0.1-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.2.0'
    ext.javax_ws_rs_version = '2.1'
    ext.junit_version = '4.12'
    ext.jackson_version = '2.9.2'
    ext.joda_time_version = '2.9.9'
    ext.slf4j_version = '1.7.25'
    ext.easymock_version = '3.5.1'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = 1.8

if (System.env['DEPLOY_TO_NEXUS'] != null) {
    signing {
        sign configurations.archives
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "javax.ws.rs:javax.ws.rs-api:$javax_ws_rs_version"
//    compile "joda-time:joda-time:$joda_time_version"
    compile "org.slf4j:slf4j-api:$slf4j_version"
    compile "com.github.kittinunf.fuel:fuel:1.12.0"
    compile "com.github.kittinunf.fuel:fuel-gson:1.12.0"
    testCompile "junit:junit:$junit_version"
    testCompile "org.easymock:easymock:$easymock_version"
    testCompile "org.slf4j:slf4j-simple:$slf4j_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                authentication(userName: System.getenv('NEXUS_USERNAME'), password: System.getenv('NEXUS_PASSWORD'))
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: System.getenv('NEXUS_USERNAME'), password: System.getenv('NEXUS_PASSWORD'))
            }

            pom.project {
                name 'JleadBoxer'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'Kotlin implementation of LeadBoxer API.'
                url 'https://github.com/Biacode/JleadBoxer'

                scm {
                    connection 'scm:git@github.com:Biacode/JleadBoxer.git'
                    developerConnection 'scm:git:ssh://github.com:Biacode/JleadBoxer.git'
                    url 'https://github.com/Biacode/JleadBoxer/tree/master'
                }

                licenses {
                    license {
                        name 'MIT License'
                        url 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        id 'biacode'
                        name 'Artur Asatryan'
                        email 'biacoder@gmail.com'
                    }
                }
            }
        }
    }
}